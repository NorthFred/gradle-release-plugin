apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'net.anshulverma.gradle.release'

apply from: "$rootDir/gradle/pom_config.gradle"
apply from: "$rootDir/gradle/package.gradle"

ext {
  bintrayUser = project.property('bintrayUser')
  bintrayKey = project.property('bintrayKey')

  releaseRepos = {
    def artifactRepoBase = 'http://oss.jfrog.org/artifactory'
    def repoPrefix = 'oss'
    def type = isSnapshot() ? 'snapshot' : 'release'
    maven {
      name 'jFrogOss'
      url "${artifactRepoBase}/${repoPrefix}-${type}-local"
      credentials {
        username = "${bintrayUser}"
        password = "${bintrayKey}"
      }
    }
  }
}

def isSnapshot() {
  project.version.toString().contains('SNAPSHOT')
}

publishing {
  repositories {
    configure(rootProject.ext.releaseRepos)
  }

  publications {
    mavenJava(MavenPublication) {
      from components.java
      artifact packageSources {
        classifier "sources"
      }
      artifact(javadocJar) {
        classifier = 'javadoc'
      }
      pom.withXml pomConfig
    }
  }
}

bintray {
  user = bintrayUser
  key = bintrayKey
  publications = ['mavenJava']
  dryRun = project.hasProperty('dryRun') ? Boolean.valueOf(project.property('dryRun')) : false
  publish = true
  pkg {
    name = 'gradle-release-plugin'
    repo = 'gradle-plugins'
    desc = 'Gradle plugin that uses popular conventions to streamline releasing of a project.'
    websiteUrl = 'https://github.com/anshulverma/gradle-release-plugin'
    issueTrackerUrl = 'https://github.com/anshulverma/gradle-release-plugin/issues'
    vcsUrl = 'https://github.com/anshulverma/gradle-release-plugin.git'
    licenses = ['Apache-2.0']
    labels = ['gradle', 'plugin', 'release', 'versioning', 'publish', 'bintray']
    publicDownloadNumbers = true
    version {
      attributes = ['gradle-plugin': 'net.anshulverma.gradle:gradle-release-plugin']
    }
  }
}
